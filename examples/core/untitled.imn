node n1 {
    type lanswitch
    network-config {
	hostname n1
	!
    }
    canvas c1
    iconcoords {306.6666666666667 115.66666666666667}
    labelcoords {306.6666666666667 139.66666666666666}
    interface-peer {e0 n2}
    interface-peer {e1 n3}
    interface-peer {e2 n4}
    interface-peer {e3 n7}
}

node n2 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {249.66666666666666 68.33333333333333}
    labelcoords {249.66666666666666 100.33333333333333}
    interface-peer {eth0 n1}
    services {StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.0.1
	/sbin/ip route add 10.0.1.20/24 via 10.0.0.2
	}
    }
}

node n3 {
    type router
    model PC
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.21/24
	!
    }
    canvas c1
    iconcoords {218.0 283.3333333333333}
    labelcoords {218.0 315.3333333333333}
    interface-peer {eth0 n1}
    services {}
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 10.0.1.1/24
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {391.3333333333333 67.33333333333333}
    labelcoords {391.3333333333333 99.33333333333333}
    interface-peer {eth0 n1}
    services {zebra IPForward}
    interface-peer {eth1 n5}
}

node n5 {
    type lanswitch
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {499.3333333333333 104.0}
    labelcoords {499.3333333333333 128.0}
    interface-peer {e0 n4}
    interface-peer {e1 n6}
    interface-peer {e2 n7}
}

node n6 {
    type router
    model PC
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.1.20/24
	!
    }
    canvas c1
    iconcoords {522.6666666666666 43.333333333333336}
    labelcoords {522.6666666666666 75.33333333333333}
    interface-peer {eth0 n5}
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth1
	 ip address 10.0.1.2/24
	!
	interface eth0
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {374.6666666666667 248.66666666666666}
    labelcoords {374.6666666666667 280.66666666666663}
    interface-peer {eth0 n1}
    interface-peer {eth1 n5}
}

link l1 {
    nodes {n2 n1}
    bandwidth 0
}

link l2 {
    nodes {n3 n1}
    bandwidth 0
}

link l3 {
    delay 10000
    nodes {n1 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    nodes {n5 n6}
    bandwidth 0
}

link l6 {
    nodes {n1 n7}
    bandwidth 0
}

link l7 {
    nodes {n5 n7}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

