node n1 {
    type lanswitch
    network-config {
	hostname n1
	!
    }
    canvas c1
    iconcoords {242.0 182.0}
    labelcoords {242.0 206.0}
    interface-peer {e0 n2}
    interface-peer {e1 n3}
    interface-peer {e2 n4}
    interface-peer {e3 n5}
    interface-peer {e4 n6}
    interface-peer {e5 n7}
}

node n2 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {119.0 80.0}
    labelcoords {119.0 112.0}
    interface-peer {eth0 n1}
    services {DefaultRoute}
}

node n3 {
    type router
    model PC
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.21/24
	!
    }
    canvas c1
    iconcoords {85.0 168.0}
    labelcoords {85.0 200.0}
    interface-peer {eth0 n1}
}

node n4 {
    type router
    model PC
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.0.22/24
	!
    }
    canvas c1
    iconcoords {88.0 263.0}
    labelcoords {88.0 295.0}
    interface-peer {eth0 n1}
}

node n5 {
    type router
    model PC
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 10.0.0.23/24
	!
    }
    canvas c1
    iconcoords {135.0 340.0}
    labelcoords {135.0 372.0}
    interface-peer {eth0 n1}
}

node n6 {
    type router
    model PC
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.0.24/24
	!
    }
    canvas c1
    iconcoords {201.0 376.0}
    labelcoords {201.0 408.0}
    interface-peer {eth0 n1}
}

node n7 {
    type router
    model router
    network-config {
	hostname BorderRouter
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
	interface eth1
	 ip address 199.85.64.253/24
	!
    }
    canvas c1
    iconcoords {373.0 360.0}
    labelcoords {373.0 392.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n8}
    services {zebra IPForward DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 10.0.0.1
	ip route add default via 199.85.64.254
	
	}
    }
}

node n8 {
    type router
    model router
    network-config {
	hostname ISP
	!
	interface eth0
	 ip address 10.0.1.1/24
	!
	interface eth1
	 ip address 199.85.64.254/24
	!
    }
    canvas c1
    iconcoords {712.0 358.0}
    labelcoords {712.0 390.0}
    interface-peer {eth0 n9}
    interface-peer {eth1 n7}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.1.1
	#/sbin/ip route add 10.9.8.0/24 via 199.85.64.1
	/sbin/ip route add 10.0.0.0/24 via 199.85.64.253
	}
    }
}

node n9 {
    type router
    model host
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.1.10/24
	!
    }
    canvas c1
    iconcoords {859.0 201.0}
    labelcoords {859.0 233.0}
    interface-peer {eth0 n8}
}

node n10 {
    type lanswitch
    network-config {
	hostname n10
	!
    }
    canvas c2
    iconcoords {317.0 232.0}
    labelcoords {317.0 256.0}
    interface-peer {e0 n11}
    interface-peer {e1 n12}
    interface-peer {e2 n13}
    interface-peer {e3 n14}
    interface-peer {e4 n15}
    interface-peer {e5 n16}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 10.0.2.20/24
	!
    }
    canvas c2
    iconcoords {194.0 130.0}
    labelcoords {194.0 162.0}
    interface-peer {eth0 n10}
    services {DefaultRoute}
}

node n12 {
    type router
    model PC
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 10.0.2.21/24
	!
    }
    canvas c2
    iconcoords {160.0 218.0}
    labelcoords {160.0 250.0}
    interface-peer {eth0 n10}
}

node n13 {
    type router
    model PC
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 10.0.2.22/24
	!
    }
    canvas c2
    iconcoords {163.0 313.0}
    labelcoords {163.0 345.0}
    interface-peer {eth0 n10}
}

node n14 {
    type router
    model PC
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 10.0.2.23/24
	!
    }
    canvas c2
    iconcoords {210.0 390.0}
    labelcoords {210.0 422.0}
    interface-peer {eth0 n10}
}

node n15 {
    type router
    model PC
    network-config {
	hostname n15
	!
	interface eth0
	 ip address 10.0.2.24/24
	!
    }
    canvas c2
    iconcoords {276.0 426.0}
    labelcoords {276.0 458.0}
    interface-peer {eth0 n10}
}

node n16 {
    type router
    model router
    network-config {
	hostname BorderRouter
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
	interface eth0
	 ip address 10.0.2.1/24
	!
    }
    canvas c2
    iconcoords {448.0 410.0}
    labelcoords {448.0 442.0}
    interface-peer {eth0 n10}
    interface-peer {eth1 n17}
    services {zebra IPForward DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 10.0.0.1
	ip route add default via 199.85.64.254
	
	}
    }
}

node n17 {
    type router
    model router
    network-config {
	hostname ISP
	!
	interface eth1
	 ip address 10.0.3.2/24
	!
	interface eth0
	 ip address 10.0.4.1/24
	!
    }
    canvas c2
    iconcoords {787.0 408.0}
    labelcoords {787.0 440.0}
    interface-peer {eth0 n18}
    interface-peer {eth1 n16}
    services {zebra IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.0.1.1
	#/sbin/ip route add 10.9.8.0/24 via 199.85.64.1
	/sbin/ip route add 10.0.0.0/24 via 199.85.64.253
	}
    }
}

node n18 {
    type router
    model host
    network-config {
	hostname n18
	!
	interface eth0
	 ip address 10.0.4.10/24
	!
    }
    canvas c2
    iconcoords {934.0 251.0}
    labelcoords {934.0 283.0}
    interface-peer {eth0 n17}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n1 n3}
    bandwidth 0
}

link l3 {
    nodes {n1 n4}
    bandwidth 0
}

link l4 {
    nodes {n1 n5}
    bandwidth 0
}

link l5 {
    nodes {n1 n6}
    bandwidth 0
}

link l6 {
    nodes {n1 n7}
    bandwidth 0
}

link l7 {
    nodes {n8 n9}
    bandwidth 0
}

link l8 {
    delay 1000
    nodes {n7 n8}
    bandwidth 0
}

link l9 {
    nodes {n10 n11}
    bandwidth 0
}

link l10 {
    nodes {n10 n12}
    bandwidth 0
}

link l11 {
    nodes {n10 n13}
    bandwidth 0
}

link l12 {
    nodes {n10 n14}
    bandwidth 0
}

link l13 {
    nodes {n10 n15}
    bandwidth 0
}

link l14 {
    nodes {n10 n16}
    bandwidth 0
}

link l15 {
    delay 1000
    nodes {n16 n17}
    bandwidth 0
}

link l16 {
    nodes {n17 n18}
    bandwidth 0
}

annotation a1 {
    type text
    iconcoords {362.0 68.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

canvas c2 {
    name {Canvas2}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

