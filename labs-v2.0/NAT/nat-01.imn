node n1 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 192.168.0.20/24
	!
    }
    canvas c1
    iconcoords {83.0 312.0}
    labelcoords {83.0 344.0}
    interface-peer {eth0 n4}
}

node n2 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 192.168.0.21/24
	!
    }
    canvas c1
    iconcoords {185.0 336.0}
    labelcoords {185.0 368.0}
    interface-peer {eth0 n4}
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 192.168.0.10/24
	!
    }
    canvas c1
    iconcoords {307.0 340.0}
    labelcoords {307.0 372.0}
    interface-peer {eth0 n4}
    services {DefaultRoute SSH UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('/usr/sbin/inetd', )
	}
    }
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {139.0 198.0}
    labelcoords {139.0 222.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n5}
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth1
	 ip address 8.1.0.1/24
	!
	interface eth0
	 ip address 192.168.0.1/24
	!
    }
    canvas c1
    iconcoords {147.0 98.0}
    labelcoords {147.0 130.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:Firewall
	custom-command Firewall
	config {
	files=('firewall.sh', )
	}
    }
    custom-config {
	custom-config-id service:Firewall:firewall.sh
	custom-command firewall.sh
	config {
	#!/bin/sh
	# custom node firewall rules for service (security.py)
	# -------- CUSTOMIZATION REQUIRED --------
	#
	# Below are sample iptables firewall rules that you can uncomment and edit.
	# You can also use ip6tables rules for IPv6.
	#
	
	# start by flushing all firewall rules (so this script may be re-run)
	#iptables -F
	
	# allow traffic related to established connections
	#iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	
	# allow TCP packets from any source destined for 192.168.1.1
	#iptables -A INPUT -s 0/0 -i eth0 -d 192.168.1.1  -p TCP -j ACCEPT
	
	# allow OpenVPN server traffic from eth0
	#iptables -A INPUT -p udp --dport 1194 -j ACCEPT
	#iptables -A INPUT -i eth0 -j DROP
	#iptables -A OUTPUT -p udp --sport 1194 -j ACCEPT
	#iptables -A OUTPUT -o eth0 -j DROP
	
	# allow ICMP ping traffic
	#iptables -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
	#iptables -A INPUT  -p icmp --icmp-type echo-reply   -j ACCEPT
	
	# allow SSH traffic
	#iptables -A -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
	
	# drop all other traffic coming in eth0
	#iptables -A INPUT -i eth0 -j DROP
	
	iptables -t nat -A PREROUTING -i eth1 -p tcp --dport 23 -j DNAT --to-destination 192.168.0.10 
	iptables -t nat -A POSTROUTING -o eth1 -p tcp -j MASQUERADE --to-ports 1024-31000
	#iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 192.168.0.1
	ip route add default via 8.1.0.2
	
	}
    }
    services {IPForward DefaultRoute Firewall}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 8.1.0.2/24
	!
	interface eth1
	 ip address 8.0.0.1/24
	!
    }
    canvas c1
    iconcoords {410.0 96.0}
    labelcoords {410.0 128.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n7}
    services {IPForward}
}

node n7 {
    type lanswitch
    network-config {
	hostname n7
	!
    }
    canvas c1
    iconcoords {431.0 174.0}
    labelcoords {431.0 198.0}
    interface-peer {e0 n6}
    interface-peer {e1 n8}
    interface-peer {e2 n9}
}

node n8 {
    type router
    model host
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 8.0.0.10/24
	!
    }
    canvas c1
    iconcoords {506.0 273.0}
    labelcoords {506.0 305.0}
    interface-peer {eth0 n7}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('/usr/sbin/inetd', )
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n9 {
    type router
    model PC
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 8.0.0.20/24
	!
    }
    canvas c1
    iconcoords {392.0 259.0}
    labelcoords {392.0 291.0}
    interface-peer {eth0 n7}
}

link l1 {
    nodes {n1 n4}
    bandwidth 0
}

link l2 {
    nodes {n2 n4}
    bandwidth 0
}

link l3 {
    nodes {n4 n3}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    nodes {n5 n6}
    bandwidth 0
}

link l6 {
    nodes {n6 n7}
    bandwidth 0
}

link l7 {
    nodes {n7 n8}
    bandwidth 0
}

link l8 {
    nodes {n7 n9}
    bandwidth 0
}

annotation a1 {
    type text
    iconcoords {121.0 34.0}
    label {}
    canvas c1
}

annotation a2 {
    iconcoords {12.0 31.0 348.0 395.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a3 {
    iconcoords {363 29 596 338}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #f8c0ff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a4 {
    type text
    iconcoords {433.0 33.0}
    label {}
    canvas c1
}

annotation a5 {
    iconcoords {56.0 45.0}
    type text
    label {Rete Privata. Un indirizzo IP pubblico}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

annotation a6 {
    type text
    iconcoords {183.0 346.0}
    label {}
    canvas c1
}

annotation a7 {
    iconcoords {241.0 381.0}
    type text
    label {Telnet Server}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

annotation a8 {
    type text
    iconcoords {332.0 390.0}
    label {}
    canvas c1
}

annotation a9 {
    type text
    iconcoords {355.0 399.0}
    label {}
    canvas c1
}

annotation a10 {
    iconcoords {485.0 319.0}
    type text
    label {Telnet Server}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

annotation a11 {
    type text
    iconcoords {520.0 328.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

