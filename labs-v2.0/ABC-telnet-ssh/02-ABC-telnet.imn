node n1 {
    type lanswitch
    network-config {
	hostname n1
	!
    }
    canvas c1
    iconcoords {69.33333333333334 144.33333333333334}
    labelcoords {69.33333333333334 168.33333333333334}
    interface-peer {e0 n5}
    interface-peer {e1 n3}
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {718.0 123.66666666666666}
    labelcoords {718.0 147.66666666666666}
    interface-peer {e0 n4}
    interface-peer {e1 n6}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth2
	 ip address 10.10.10.1/30
	!
	interface eth0
	 ip address 10.0.0.254/24
	!
    }
    canvas c1
    iconcoords {171.66666666666669 77.0}
    labelcoords {171.66666666666669 109.0}
    interface-peer {eth0 n1}
    services {zebra RIP vtysh IPForward}
    interface-peer {eth2 n7}
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 10.0.1.254/24
	!
	interface eth2
	 ip address 10.10.10.2/30
	!
    }
    canvas c1
    iconcoords {590.6666666666667 77.0}
    labelcoords {590.6666666666667 109.0}
    interface-peer {eth1 n2}
    services {zebra RIP vtysh IPForward}
    interface-peer {eth2 n7}
}

node n5 {
    type router
    model PC
    network-config {
	hostname Alice
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {71.5 313.6666666666667}
    labelcoords {71.5 345.6666666666667}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    services {DefaultRoute}
}

node n6 {
    type router
    model host
    network-config {
	hostname Bob
	!
	interface eth0
	 ip address 10.0.1.1/24
	!
    }
    canvas c1
    iconcoords {726.3333333333333 327.8333333333333}
    labelcoords {726.3333333333333 359.8333333333333}
    interface-peer {eth0 n2}
    services {DefaultRoute SSH UserDefined}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.254
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	cmdup=('/usr/sbin/inetd /etc/inetd.conf', )
	cmddown=('killall inetd', )
	}
    }
}

node n7 {
    type router
    model PC
    network-config {
	hostname Charlie
	!
	interface eth1
	 mac address 00:00:00:00:00:00
	!
	interface eth0
	 mac address 00:00:00:00:00:00
	!
    }
    canvas c1
    iconcoords {374.0 226.0}
    labelcoords {374.0 258.0}
    services {IPForward UserDefined}
    interface-peer {eth0 n3}
    interface-peer {eth1 n4}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('start-bridge.sh', )
	cmdup=('sh start-bridge.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:start-bridge.sh
	custom-command start-bridge.sh
	config {
	ip link add name br0 type bridge
	ip link set dev br0 up
	ip link set dev eth0 master br0
	ip link set dev eth1 master br0
	}
    }
}

link l1 {
    nodes {n5 n1}
    bandwidth 0
}

link l2 {
    nodes {n1 n3}
    bandwidth 0
}

link l4 {
    nodes {n4 n2}
    bandwidth 0
}

link l5 {
    nodes {n2 n6}
    bandwidth 0
}

link l6 {
    nodes {n3 n7}
    bandwidth 0
}

link l7 {
    nodes {n7 n4}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

traffic {
    {flow 1 from n5 to n6} 1 0.0 10.0 n5 n6 10.0.0.20 5000 {} 10.0.2.10 5000 /var/log/mgen1.log UDP {} {PERIODIC [10.0 125]} {}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

