node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 192.168.2.2/24
	!
	interface eth1
	 ip address 192.168.1.1/24
	!
	interface eth0
	 ip address 192.168.0.1/24
	!
    }
    canvas c1
    iconcoords {469.0 194.0}
    labelcoords {469.0 226.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    interface-peer {eth2 n6}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.0.1
	#/sbin/ip route add 3ffe:4::/64 via a::1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.1.1
	#/sbin/ip route add 3ffe:4::/64 via a:1::1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.2.1
	#/sbin/ip route add 3ffe:4::/64 via a:2::1
	#/sbin/ip route add 10.0.1.0/24 via 192.168.0.10
	ip route add 192.168.4.0/24 via 192.168.0.10
	ip route add 192.168.3.0/24 via 192.168.2.1
	}
    }
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {577.0 79.0}
    labelcoords {577.0 103.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 192.168.0.10/24
	!
    }
    canvas c1
    iconcoords {740.0 110.0}
    labelcoords {740.0 142.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.0.1
	
	}
    }
    custom-config {
	custom-config-id service:startup
	custom-command startup
	config {
	files=('startup.sh', )
	}
    }
    custom-config {
	custom-config-id service:startup:startup.sh
	custom-command startup.sh
	config {
	#!/bin/sh
	# auto-generated by Startup (startup.py)
	
	exec > startup.log 2>&1
	
	sh defaultroute.sh
	sh startsshd.sh
	
	ip tunnel add tun2 mode gre remote 192.168.3.20 local 192.168.0.10  
	ip link set tun2 up
	ip addr add 10.0.1.1/30 dev tun2 
	ip route add 192.168.4.0/24 via 10.0.1.2
	sysctl -w net.ipv4.conf.all.forwarding=1
	}
    }
    services {IPForward DefaultRoute SSH startup}
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {589.0 314.0}
    labelcoords {589.0 338.0}
    interface-peer {e0 n1}
    interface-peer {e1 n5}
    interface-peer {e2 n12}
}

node n5 {
    type router
    model host
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 192.168.1.10/24
	!
    }
    canvas c1
    iconcoords {764.0 337.0}
    labelcoords {764.0 369.0}
    interface-peer {eth0 n4}
    services {DefaultRoute SSH}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth2
	 ip address 192.168.4.1/24
	!
	interface eth1
	 ip address 192.168.3.1/24
	!
	interface eth0
	 ip address 192.168.2.1/24
	!
    }
    canvas c1
    iconcoords {302.0 122.0}
    labelcoords {302.0 154.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n7}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 192.168.2.1
	#/sbin/ip route add 10.9.8.0/24 via 192.168.3.1
	ip route add 192.168.0.10 via 192.168.2.2
	ip route add 192.168.1.0/24 via 192.168.3.20  
	}
    }
    interface-peer {eth2 n9}
}

node n7 {
    type lanswitch
    network-config {
	hostname n7
	!
    }
    canvas c1
    iconcoords {211.0 158.0}
    labelcoords {211.0 182.0}
    interface-peer {e0 n6}
    interface-peer {e1 n8}
}

node n8 {
    type router
    model host
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 192.168.3.20/24
	!
    }
    canvas c1
    iconcoords {85.0 108.0}
    labelcoords {85.0 140.0}
    interface-peer {eth0 n7}
    custom-config {
	custom-config-id service:startup
	custom-command startup
	config {
	files=('startup.sh', )
	}
    }
    custom-config {
	custom-config-id service:startup:startup.sh
	custom-command startup.sh
	config {
	#!/bin/sh
	# auto-generated by Startup (startup.py)
	
	exec > startup.log 2>&1
	
	sh defaultroute.sh
	
	ip tunnel add tun1 mode gre remote 192.168.0.10 local 192.168.3.20
	ip link set tun1 up
	ip addr add 10.0.1.2/30 dev tun1
	ip route add 192.168.1.0/24 via 10.0.1.1
	/sbin/sysctl -w net.ipv4.conf.all.forwarding=1
	}
    }
    services {IPForward DefaultRoute startup}
}

node n9 {
    type lanswitch
    network-config {
	hostname n9
	!
    }
    canvas c1
    iconcoords {212.0 276.0}
    labelcoords {212.0 300.0}
    interface-peer {e0 n6}
    interface-peer {e1 n10}
    interface-peer {e2 n11}
}

node n10 {
    type router
    model host
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 192.168.4.10/24
	 ipv6 address a:0::10/64
	!
    }
    canvas c1
    iconcoords {82.0 280.0}
    labelcoords {82.0 312.0}
    interface-peer {eth0 n9}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 192.168.4.20/24
	 ipv6 address a:0::20/64
	!
    }
    canvas c1
    iconcoords {72.0 366.0}
    labelcoords {72.0 398.0}
    interface-peer {eth0 n9}
}

node n12 {
    type router
    model PC
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 192.168.1.20/24
	 ipv6 address a:1::20/64
	!
    }
    canvas c1
    iconcoords {762.0 415.0}
    labelcoords {762.0 447.0}
    interface-peer {eth0 n4}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n1 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    nodes {n6 n1}
    bandwidth 0
}

link l6 {
    nodes {n7 n6}
    bandwidth 0
}

link l7 {
    nodes {n8 n7}
    bandwidth 0
}

link l8 {
    nodes {n6 n9}
    bandwidth 0
}

link l9 {
    nodes {n10 n9}
    bandwidth 0
}

link l10 {
    nodes {n11 n9}
    bandwidth 0
}

link l11 {
    nodes {n4 n12}
    bandwidth 0
}

annotation a1 {
    iconcoords {14 32 219 181}
    type rectangle
    label {Server Tunneling}
    labelcolor black
    fontfamily {Arial}
    fontsize 12
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a2 {
    iconcoords {615 40 809 195}
    type rectangle
    label {NAS}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

