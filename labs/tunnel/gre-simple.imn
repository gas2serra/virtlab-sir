node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 192.168.2.2/24
	 ipv6 address a:2::2/64
	!
	interface eth1
	 ip address 192.168.1.1/24
	 ipv6 address a:1::1/64
	!
	interface eth0
	 ip address 192.168.0.1/24
	 ipv6 address a:0::1/64
	!
    }
    canvas c1
    iconcoords {469.0 195.0}
    labelcoords {469.0 227.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    interface-peer {eth2 n6}
    services {zebra RIP IPForward}
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {577.0 79.0}
    labelcoords {577.0 103.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ipv6 address a:0::10/64
	 ip address 192.168.0.10/24
	!
    }
    canvas c1
    iconcoords {750.0 113.0}
    labelcoords {750.0 145.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:startup
	custom-command startup
	config {
	files=('startup.sh', )
	}
    }
    custom-config {
	custom-config-id service:startup:startup.sh
	custom-command startup.sh
	config {
	#!/bin/sh
	# auto-generated by Startup (startup.py)
	
	exec > startup.log 2>&1
	
	sh defaultroute.sh
	sh startsshd.sh
	
	ip tunnel add tun2 mode gre remote 192.168.3.20 local 192.168.0.10  
	ip link set tun2 up
	ip addr add 10.0.1.2 dev tun2 
	ip route add 10.0.1.0/24 dev tun2
	}
    }
    services {DefaultRoute SSH startup}
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {589.0 314.0}
    labelcoords {589.0 338.0}
    interface-peer {e0 n1}
    interface-peer {e1 n5}
}

node n5 {
    type router
    model host
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 192.168.1.10/24
	 ipv6 address a:1::10/64
	!
    }
    canvas c1
    iconcoords {763.0 337.0}
    labelcoords {763.0 369.0}
    interface-peer {eth0 n4}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth1
	 ip address 192.168.3.1/24
	 ipv6 address a:3::1/64
	!
	interface eth0
	 ip address 192.168.2.1/24
	 ipv6 address a:2::1/64
	!
    }
    canvas c1
    iconcoords {302.0 122.0}
    labelcoords {302.0 154.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n7}
    services {zebra RIP IPForward}
}

node n7 {
    type lanswitch
    network-config {
	hostname n7
	!
    }
    canvas c1
    iconcoords {146.0 125.0}
    labelcoords {146.0 149.0}
    interface-peer {e0 n6}
    interface-peer {e1 n8}
}

node n8 {
    type router
    model PC
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 192.168.3.20/24
	 ipv6 address a:3::20/64
	!
    }
    canvas c1
    iconcoords {56.0 194.0}
    labelcoords {56.0 226.0}
    interface-peer {eth0 n7}
    custom-config {
	custom-config-id service:startup
	custom-command startup
	config {
	files=('startup.sh', )
	}
    }
    custom-config {
	custom-config-id service:startup:startup.sh
	custom-command startup.sh
	config {
	#!/bin/sh
	# auto-generated by Startup (startup.py)
	
	exec > startup.log 2>&1
	
	sh defaultroute.sh
	
	ip tunnel add tun1 mode gre remote 192.168.0.10 local 192.168.3.20
	ip link set tun1 up
	ip addr add 10.0.1.1 dev tun1
	ip route add 10.0.1.0/24 dev tun1
	}
    }
    services {DefaultRoute startup}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n1 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    nodes {n6 n1}
    bandwidth 0
}

link l6 {
    nodes {n7 n6}
    bandwidth 0
}

link l7 {
    nodes {n8 n7}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

